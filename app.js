"use strict"

function minWalk(gridList, startX, startY, endX, endY) {
const grid = gridList.map(str => str.split(''));
grid[startX][startY] = 0;
let step = 0;

const fillGrid = (x, y) => {
  if (x >= 0 && x <= grid.length - 1 
    && y >= 0 && y <= grid.length - 1 
    && grid[x][y] === '.') {
    grid[x][y] = step + 1;
  }
}

while (grid[endX][endY] === '.') {
  grid.find((row, rowIndex) => row.find((cell, cellIndex) => {
    if (cell === step) {
      let x = rowIndex;
      let y = cellIndex;
  
      fillGrid(x+1, y);
      fillGrid(x+1, y+1);
      fillGrid(x+1, y-1);
      fillGrid(x, y+1);
      fillGrid(x, y-1);
      fillGrid(x-1, y+1);
      fillGrid(x-1, y-1);
      fillGrid(x-1, y);
    }}))
    step++;
} 
  console.log(grid)
  return grid[endX][endY];
}

const result = minWalk(
[
  '.X.',
  '.x.',
  '...'
], 
0, 0,
0, 2
);

console.log(result)


/****************************************************************
Описание
	Вам дается квадратная сетка с обычными `.` и заблокированными `X` ячейками. 
  Ваша игровая фигура может перемещаться по любой строке или столбцу или диагонали, пока не достигнет края сетки или заблокированной ячейки. 
  Учитывая сетку, начальную и конечную позиции, определите количество ходов, чтобы добраться до конечной позиции.

Например
	Дана сетка:
  .X.
  .X.
  ...
  
  Система координаты для данной сетки:
  0.0 0.1 0.2
  1.0 1.1	1.2
  2.0	2.1	2.2

  Начальна позиция 2.1 (отсчет идет с верхнего левого края сетки 0.0)
  Конечная позиция 0.2
  
  Путь движения между точками: (2.1) -> (1.2) -> (0.2)
  Ответ: необходимо выполнить 2 шага.

	Задача
  	Завершите выполнение функции в редакторе. Функция должена вывести целое число, обозначающее минимальное количество шагов для перехода от начальной позиции к конечной.
    
  Ограничения
  	Длина сетки > 1 и < 100
    Координата начальной и конечной точки входит в предоставленную сетку.
  	
****************************************************************/
